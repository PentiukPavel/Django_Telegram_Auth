version: '3.8'

services:
  db:
    image: postgres:16.1-alpine
    container_name: db
    restart: always
    volumes:
      - dta_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${DB_NAME} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10

  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - dta_static_value:/var/html/static/
      - ./certbot/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/letsencrypt:ro
    depends_on:
      - backend

  certbot:
    image: nbraun1/certbot
    container_name: certbot
    depends_on:
      - nginx
    environment:
      EMAIL: pentukpavel@mail.ru
      DOMAINS: djangotelegramauth.zapto.org
      AUTHENTICATOR: webroot
      WEBROOT_PATH: /var/www/letsencrypt
      POST_HOOK_CMD: docker kill -s HUP $$(docker ps --filter "name=nginx" | awk '{print $$1}')
      CRON: "0 0 1 * *"
    volumes:
      - ./certbot/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  backend:
    image: ${DOCKER_HUB_USERNAME}/dta:latest
    container_name: backend
    restart: always
    volumes:
      - dta_static_value:/app/static/
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - .env

volumes:
  dta_static_value:
  dta_data:
